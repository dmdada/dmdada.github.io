<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[函数源码]]></title>
    <url>%2F2018%2F05%2F23%2F%E6%B5%8B%E8%AF%95%E5%8D%9A%E5%AE%A2-md%2F</url>
    <content type="text"><![CDATA[strcpy源码：char *strcpy(char *strDes, const char *strSrc) { assert((strDes != NULL) &amp;&amp; (strSrc != NULL)); char *address = strDes; while ((*strDes ++ = *strSrc ++) != &apos;\0&apos;) NULL; return address; 注意：strcpy只是复制字符串，但不限制复制的数量。很容易造成缓冲溢出，也就是说，不过dest有没有足够的空间来容纳src的字符串，它都会把src指向的字符串全部复制到从dest开始的内存 strcmp源码：int strcmp(const char *s, const char *t) { assert(s != NULL &amp;&amp; t != NULL); while (*s &amp;&amp; *t &amp;&amp; *s == *t) { ++ s; ++ t; } return (*s - *t); } strcat源码：char *strcat(char *strDes, const char *strSrc) { assert((strDes != NULL) &amp;&amp; (strSrc != NULL)); char *address = strDes; while (*strDes != &apos;\0&apos;) ++ strDes; while ((*strDes ++ = *strSrc ++) != &apos;\0&apos;) NULL; return address; } 注意：1.不能向形参传递指向字符串常量的指针（本题中dst和src都是指向串常量的指针，字符串常量存储在常量区不能被修改 2.传递的字符数组前一个实参的所分配的内存空间必须足够大 strlen源码：int strlen(const char *str) { assert(str != NULL); int len = 0; while (*str ++ != &apos;\0&apos;) ++ len; return len; } strstr源码：char *strstr(const char *strSrc, const char *str) { assert(strSrc != NULL &amp;&amp; str != NULL); const char *s = strSrc; const char *t = str; for (; *t != &apos;\0&apos;; ++ strSrc) { for (s = strSrc, t = str; *t != &apos;\0&apos; &amp;&amp; *s == *t; ++s, ++t) NULL; if (*t == &apos;\0&apos;) return (char *) strSrc; } return NULL; } strchr源码：char * __cdecl strchr ( constchar * string, int ch ) { while (*string &amp;&amp; *string != (char)ch) string++; if (*string == (char)ch) return((char *)string); return(NULL); } 断言：assert（表达式）如果表达式的值为假，整个程序将退出，并输出一条错误信息。如果表达式的值为真则继续执行后面的语句，使用这个宏前需要包含头文件assert.h结语：函数就向一个黑盒一样，调用它的人给他输入（调用它本身就是一种输入），然后等待一个理想中的输出或者是相应的操作。调用者是希望我们的这个函数能够非常健壮的让他们利用，那么为了使我们的函数拥有一定的鲁棒性。]]></content>
      <tags>
        <tag>c/c++</tag>
        <tag>程序源码</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一篇博客]]></title>
    <url>%2F2018%2F05%2F23%2Fhello-world%2F</url>
    <content type="text"><![CDATA[测试博客这是一篇测试博客第一次使用github+hexo搭建属于自己的博客dikfsadadadada sdadada asdasda asdadadasdadada dadadaadaas dadadadaddaddadada asdadada]]></content>
      <tags>
        <tag>c/c++</tag>
      </tags>
  </entry>
</search>
